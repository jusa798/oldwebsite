{"version":3,"sources":["HelperFunctions/orderedPairConverter.js","Components/Square/Square.js","HelperFunctions/stringToNumberArr.js","Puzzles/PuzzlesList.js","Components/SudokuBoard/SudokuBoard.js","App.js","serviceWorker.js","index.js"],"names":["orderedPairConverter","stringLocation","reverse","formatted","row","column","toString","Square","props","store","subscribe","checkReduxState","useState","incorrectState","setState","currentBoardState","getState","board","i","j","location","className","cssClass","edge","join","assignClass","initialGrid","updateBoardInitalState","type","maxLength","onChange","e","updateSquareInputState","autoComplete","checkStartingPosition","initialPosition","stringToNumberArr","arr","length","questionsArr","solutionsArr","Board","nullBoard","emptyBoard","solvedBoardRedux","setBoardState","incorrectBoard","setIncorrect","solvedState","setSolved","solved","dispatch","updateSolved","number","target","value","updateIncorrect","randomNumber","solution","getNewGame","arrIndex","solvedPosition","checkSolved","id","onClick","counter","restart","App","createNewBoard","randomNumberGenerator","makeNewGame","Math","floor","random","setNewGame","newGame","Boolean","window","hostname","match","createStore","action","Object","assign","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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CV,IAAK,IAAK,IACV,IAAK,IAAK,MAIG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAIG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAGG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAGG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAGG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAGG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAGG,CACf,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,MAGI,CAChB,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,IAAK,IACV,IAAK,IAAK,KAEZ,CACE,IAAK,IAAK,IACV,IAAK,I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","file":"static/js/main.e84d6872.chunk.js","sourcesContent":["\r\n//      I use this to switch back between the typical chess positions (a1, b2, c3, etc) to  \r\n//      actual [i, j] locations for the matrix representation of the board\r\n\r\nconst orderedPairConverter = (stringLocation, reverse=false, formatted=false) => {\r\n    if (reverse === true) {\r\n        let row = stringLocation[0] + 1;\r\n        let column = stringLocation[1];\r\n    \r\n        \r\n        if (column === 0) {\r\n            column = \"a\"\r\n        } else if (column === 1) {\r\n            column = \"b\"\r\n        } else if (column === 2) {\r\n            column = \"c\"\r\n        } else if (column === 3) {\r\n            column = \"d\"\r\n        } else if (column === 4) {\r\n            column = \"e\"\r\n        } else if (column === 5) {\r\n            column = \"f\"\r\n        } else if (column === 6) {\r\n            column = \"g\"\r\n        } else if (column === 7) {\r\n            column = \"h\"\r\n        } else if (column === 8) {\r\n            column = \"i\"\r\n        };       \r\n\r\n        return column + row.toString();\r\n    } else {\r\n        let column = stringLocation[0]  \r\n        if (column === \"a\") {\r\n            column = 0\r\n        } else if (column === \"b\") {\r\n            column = 1\r\n        } else if (column === \"c\") {\r\n            column = 2\r\n        } else if (column === \"d\") {\r\n            column = 3\r\n        } else if (column === \"e\") {\r\n            column = 4\r\n        } else if (column === \"f\") {\r\n            column = 5\r\n        } else if (column === \"g\") {\r\n            column = 6\r\n        } else if (column === \"h\") {\r\n            column = 7\r\n        } else if (column === \"i\") {\r\n            column = 8\r\n        };       \r\n        \r\n        const row = stringLocation[1] - 1;\r\n\r\n        if (formatted === true) {\r\n            return [row][column]\r\n        }\r\n\r\n        return [row, column]\r\n    } \r\n    \r\n}\r\n\r\n//console.log(orderedPairConverter([0, 1], true))\r\n\r\nexport default orderedPairConverter;","import React, {useState} from 'react';\r\nimport './Square.css'\r\nimport orderedPairConverter from '../../HelperFunctions/orderedPairConverter';\r\nimport {store} from \"../../index\"\r\n\r\nconst Square = (props) => {\r\n    // eslint-disable-next-line\r\n    const unsubscribe = store.subscribe(() => checkReduxState()) \r\n    \r\n    let [incorrectState, setState] = useState(false)\r\n   \r\n    let checkStartingPosition = (initialGrid, stringLocation) => { \r\n        let [i, j] = orderedPairConverter(stringLocation)\r\n        if (initialGrid[i][j] != null) {\r\n            props.updateBoardInitalState(initialGrid[i][j], stringLocation)\r\n            return initialGrid[i][j]\r\n        } else {\r\n            return (\r\n    \r\n                <input \r\n                    className=\"inputField\" \r\n                    type=\"numberLimiter\" \r\n                    maxLength=\"1\" \r\n                    onChange={(e) => {props.updateSquareInputState(e, props.location)}}\r\n                    autoComplete=\"off\"\r\n                />)\r\n        }\r\n    }\r\n\r\n    let checkReduxState = () => {\r\n        let currentBoardState = store.getState()\r\n        if (currentBoardState.board[i][j] === \"incorrect\") {\r\n            setState(true)\r\n        } else if (currentBoardState.board[i][j] === \"solved\") {\r\n            setState(\"solved\")\r\n        } else {\r\n            setState(false)\r\n        }\r\n    }\r\n\r\n    let assignClass = () => {\r\n        let cssClass = `square ${props.edge}`\r\n\r\n        if (incorrectState === true) {\r\n            cssClass = [\"square incorrect \", props.edge].join(\" \")\r\n        } \r\n\r\n        if (incorrectState === \"solved\") {\r\n            cssClass = [\"square solved \", props.edge].join(\" \")\r\n        }\r\n        return cssClass\r\n      \r\n    }\r\n\r\n    let [i, j] = orderedPairConverter(props.location)\r\n\r\n    return (\r\n        <div className={assignClass()} >\r\n           <div className=\"inputField-container\">\r\n        \r\n        {checkStartingPosition(props.initialPosition, props.location)}\r\n\r\n           </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square;\r\n","let stringToNumberArr = (arr) => {\r\n    for (let i = 0; i<arr.length;i++) {\r\n        for (let j =0 ; j<arr[i].length; j++) {\r\n            if (arr[i][j]===0 || arr[i][j]===\"0\" || arr[i][j]===null) {\r\n                arr[i][j] = null\r\n            } else {\r\n                arr[i][j] = +arr[i][j]\r\n            }\r\n        } \r\n    }\r\n    return arr\r\n}\r\n\r\nexport default stringToNumberArr;","let p1question = [\r\n    [\r\n      null, null, '4',\r\n      '3',  null, null,\r\n      '2',  null, '9'\r\n    ],\r\n    [\r\n      null, null, '5',\r\n      null, null, '9',\r\n      null, null, '1'\r\n    ],\r\n    [\r\n      null, '7', null,\r\n      null, '6', null,\r\n      null, '4', '3'\r\n    ],\r\n    [\r\n      null, null, '6',\r\n      null, null, '2',\r\n      null, '8',  '7'\r\n    ],\r\n    [\r\n      '1',  '9',  null,\r\n      null, null, '7',\r\n      '4',  null, null\r\n    ],\r\n    [\r\n      null, '5',  null,\r\n      null, '8',  '3',\r\n      null, null, null\r\n    ],\r\n    [\r\n      '6',  null, null,\r\n      null, null, null,\r\n      '1',  null, '5'\r\n    ],\r\n    [\r\n      null, null, '3',\r\n      '5',  null, '8',\r\n      '6',  '9',  null\r\n    ],\r\n    [\r\n      null, '4',  '2',\r\n      '9',  '1',  null,\r\n      '3',  null, null\r\n    ]\r\n  ]\r\n\r\nlet p2question = [\r\n  [\r\n    '4',  '9',  '7',\r\n    '2',  null, null,\r\n    null, null, null\r\n  ],\r\n  [\r\n    '1',  null, null,\r\n    '4',  null, null,\r\n    null, null, '5'\r\n  ],\r\n  [\r\n    null, null, null,\r\n    null, '1',  '6',\r\n    null, '9',  '8'\r\n  ],\r\n  [\r\n    '6',  '2',  null,\r\n    '3',  null, null,\r\n    null, '4',  null\r\n  ],\r\n  [\r\n    '3',  null, null,\r\n    '9',  null, null,\r\n    null, null, null\r\n  ],\r\n  [\r\n    null, null, '1',\r\n    null, '7',  '2',\r\n    '6',  null, null\r\n  ],\r\n  [\r\n    null, null, '2',\r\n    null, null, '5',\r\n    '8',  '7',  null\r\n  ],\r\n  [\r\n    null, null, null,\r\n    '6',  null, null,\r\n    null, null, '4'\r\n  ],\r\n  [\r\n    '5',  '3', null,\r\n    null, '9', '7',\r\n    null, '6', '1'\r\n  ]\r\n]\r\n\r\nlet p3question = [\r\n  [\r\n    null, null, '9',\r\n    null, '6',  '5',\r\n    '4',  '3',  null\r\n  ],\r\n  [\r\n    null, null, '7',\r\n    null, null, null,\r\n    '8',  null, null\r\n  ],\r\n  [\r\n    '6',  null, null,\r\n    '1',  null, '8',\r\n    null, '2',  null\r\n  ],\r\n  [\r\n    null, null, '3',\r\n    null, '9',  null,\r\n    null, null, '2'\r\n  ],\r\n  [\r\n    '5', null, '1',\r\n    '4', null, '3',\r\n    '9', '6',  null\r\n  ],\r\n  [\r\n    '8',  null, '4',\r\n    null, null, null,\r\n    '1',  null, null\r\n  ],\r\n  [\r\n    null, '3',  null,\r\n    '5',  null, '9',\r\n    null, null, '7'\r\n  ],\r\n  [\r\n    null, '5',  '6',\r\n    null, '8',  null,\r\n    null, null, null\r\n  ],\r\n  [\r\n    null, '7', null,\r\n    '2',  '4', null,\r\n    null, '9', null\r\n  ]\r\n]\r\n\r\nlet p4question = [\r\n  [\r\n    '5',  null, '3',\r\n    null, '7',  null,\r\n    '1',  '9',  null\r\n  ],\r\n  [\r\n    null, null, null,\r\n    null, null, '6',\r\n    '7',  '5',  null\r\n  ],\r\n  [\r\n    null, '4',  '7',\r\n    '1',  '9',  null,\r\n    '6',  null, null\r\n  ],\r\n  [\r\n    '4',  null, null,\r\n    null, '3',  '8',\r\n    null, null, null\r\n  ],\r\n  [\r\n    '9', '5',  null,\r\n    '2', null, null,\r\n    '3', null, null\r\n  ],\r\n  [\r\n    null, null, null,\r\n    null, '1',  null,\r\n    null, '7',  '2'\r\n  ],\r\n  [\r\n    null, null, null,\r\n    '8',  null, '4',\r\n    null, null, '1'\r\n  ],\r\n  [\r\n    '3',  null, null,\r\n    null, null, '1',\r\n    '8',  '6',  null\r\n  ],\r\n  [\r\n    null, '8',  '6',\r\n    '7',  '2',  null,\r\n    null, null, '5'\r\n  ]\r\n]\r\n\r\nlet p5question = [\r\n  [\r\n    null, '6',  null,\r\n    '7',  '2',  null,\r\n    '9',  null, '8'\r\n  ],\r\n  [\r\n    null, '8',  '4',\r\n    null, null, '3',\r\n    null, null, '1'\r\n  ],\r\n  [\r\n    '7',  null, null,\r\n    '1',  null, null,\r\n    null, '6',  '5'\r\n  ],\r\n  [\r\n    '9',  null, null,\r\n    null, null, '8',\r\n    null, null, null\r\n  ],\r\n  [\r\n    null, '7',  '1',\r\n    null, '6',  null,\r\n    null, null, null\r\n  ],\r\n  [\r\n    null, null, '2',\r\n    null, '1',  null,\r\n    null, '3',  '4'\r\n  ],\r\n  [\r\n    null, null, null,\r\n    '2',  null, null,\r\n    '7',  null, '6'\r\n  ],\r\n  [\r\n    null, '3',  null,\r\n    null, '4',  '9',\r\n    '8',  null, null\r\n  ],\r\n  [\r\n    '2',  '1',  '5',\r\n    null, null, null,\r\n    null, '9',  null\r\n  ]\r\n]\r\nlet p6question = [\r\n  [\r\n    null, null, '4',\r\n    null, '8',  '3',\r\n    null, null, '2'\r\n  ],\r\n  [\r\n    null, '5',  '1',\r\n    null, null, '4',\r\n    '3',  null, null\r\n  ],\r\n  [\r\n    null, null, null,\r\n    null, '9',  '6',\r\n    '7',  '1',  null\r\n  ],\r\n  [\r\n    '1',  '2',  null,\r\n    '8',  null, null,\r\n    null, null, '6'\r\n  ],\r\n  [\r\n    null, '4',  null,\r\n    null, null, null,\r\n    '5',  null, null\r\n  ],\r\n  [\r\n    '8', '3',  null,\r\n    '6', null, '7',\r\n    '9', null, null\r\n  ],\r\n  [\r\n    null, '6',  null,\r\n    '3',  null, '9',\r\n    null, '4',  null\r\n  ],\r\n  [\r\n    null, null, '7',\r\n    null, null, null,\r\n    '2',  null, '5'\r\n  ],\r\n  [\r\n    null, '9',  null,\r\n    null, '5',  null,\r\n    '8',  null, '3'\r\n  ]\r\n]\r\nlet p7question = [\r\n  [\r\n    null, null, null,\r\n    null, '6',  null,\r\n    '2',  '8',  null\r\n  ],\r\n  [\r\n    '7',  null, '9',\r\n    null, null, '1',\r\n    null, null, null\r\n  ],\r\n  [\r\n    '8',  '6', null,\r\n    '3',  '2', null,\r\n    null, '7', '4'\r\n  ],\r\n  [\r\n    '9',  null, null,\r\n    null, '4',  null,\r\n    '5',  '1',  null\r\n  ],\r\n  [\r\n    null, null, '7',\r\n    '1',  '9',  null,\r\n    '3',  '4',  null\r\n  ],\r\n  [\r\n    null, null, '3',\r\n    null, null, '6',\r\n    null, null, '2'\r\n  ],\r\n  [\r\n    null, null, '2',\r\n    '9',  '7',  null,\r\n    null, null, null\r\n  ],\r\n  [\r\n    '3', null, null,\r\n    '8', null, null,\r\n    '9', null, '5'\r\n  ],\r\n  [\r\n    '5',  null, null,\r\n    null, null, null,\r\n    null, '2',  '1'\r\n  ]\r\n]\r\nlet p8question = [\r\n  [\r\n    null, null, '4',\r\n    '3',  null, null,\r\n    null, null, null\r\n  ],\r\n  [\r\n    '8', '9',  null,\r\n    '2', null, null,\r\n    '6', '7',  null\r\n  ],\r\n  [\r\n    '7',  null, null,\r\n    '9',  null, null,\r\n    null, '5',  null\r\n  ],\r\n  [\r\n    '5',  null, null,\r\n    null, null, '8',\r\n    '1',  '4',  null\r\n  ],\r\n  [\r\n    null, '7', null,\r\n    null, '3', '2',\r\n    null, '6', null\r\n  ],\r\n  [\r\n    '6',  null, null,\r\n    null, null, '1',\r\n    '3',  null, '8'\r\n  ],\r\n  [\r\n    null, null, '1',\r\n    '7',  '5',  null,\r\n    '9',  null, null\r\n  ],\r\n  [\r\n    null, null, '5',\r\n    null, '4',  null,\r\n    null, '1',  '2'\r\n  ],\r\n  [\r\n    '9',  '8',  null,\r\n    null, null, '6',\r\n    null, null, '5'\r\n  ]\r\n]\r\nlet p9question = [\r\n  [\r\n    null, null, '8',\r\n    null, '7',  null,\r\n    '1',  null, null\r\n  ],\r\n  [\r\n    '1',  '2', null,\r\n    null, '9', null,\r\n    null, '5', '4'\r\n  ],\r\n  [\r\n    null, null, null,\r\n    null, null, '3',\r\n    null, '2',  null\r\n  ],\r\n  [\r\n    '6',  null, '4',\r\n    null, '1',  null,\r\n    null, '8',  '9'\r\n  ],\r\n  [\r\n    '5',  '3', null,\r\n    '7',  '8', null,\r\n    null, '1', null\r\n  ],\r\n  [\r\n    null, null, '9',\r\n    null, '6',  '2',\r\n    '3',  null, null\r\n  ],\r\n  [\r\n    null, '8',  null,\r\n    null, '4',  null,\r\n    '6',  null, '7'\r\n  ],\r\n  [\r\n    null, null, '7',\r\n    '5',  null, '6',\r\n    null, null, null\r\n  ],\r\n  [\r\n    '4',  null, null,\r\n    '8',  null, null,\r\n    null, null, '2'\r\n  ]\r\n]\r\nlet p10question = [\r\n  [\r\n    null, '6',  '5',\r\n    '3',  '7',  null,\r\n    null, null, '2'\r\n  ],\r\n  [\r\n    null, null, null,\r\n    null, null, '1',\r\n    '3',  '7',  null\r\n  ],\r\n  [\r\n    null, null, null,\r\n    '6',  '4',  null,\r\n    '8',  null, null\r\n  ],\r\n  [\r\n    null, '9',  '7',\r\n    null, null, '4',\r\n    null, '2',  '8'\r\n  ],\r\n  [\r\n    null, '8',  null,\r\n    null, '9',  null,\r\n    null, null, '1'\r\n  ],\r\n  [\r\n    '1',  null, null,\r\n    null, '2',  null,\r\n    '9',  '4',  null\r\n  ],\r\n  [\r\n    null, '4',  null,\r\n    null, null, '6',\r\n    '7',  null, null\r\n  ],\r\n  [\r\n    null, '7', null,\r\n    null, '1', '8',\r\n    null, '5', null\r\n  ],\r\n  [\r\n    '2',  '3',  null,\r\n    '9',  null, null,\r\n    null, '6',  null\r\n  ]\r\n]\r\n\r\n\r\n//SOLUTIONS\r\n\r\n\r\nlet p1solution = [\r\n    [\r\n      '8', '6', '4',\r\n      '3', '7', '1',\r\n      '2', '5', '9'\r\n    ],\r\n    [\r\n      '3', '2', '5',\r\n      '8', '4', '9',\r\n      '7', '6', '1'\r\n    ],\r\n    [\r\n      '9', '7', '1',\r\n      '2', '6', '5',\r\n      '8', '4', '3'\r\n    ],\r\n    [\r\n      '4', '3', '6',\r\n      '1', '9', '2',\r\n      '5', '8', '7'\r\n    ],\r\n    [\r\n      '1', '9', '8',\r\n      '6', '5', '7',\r\n      '4', '3', '2'\r\n    ],\r\n    [\r\n      '2', '5', '7',\r\n      '4', '8', '3',\r\n      '9', '1', '6'\r\n    ],\r\n    [\r\n      '6', '8', '9',\r\n      '7', '3', '4',\r\n      '1', '2', '5'\r\n    ],\r\n    [\r\n      '7', '1', '3',\r\n      '5', '2', '8',\r\n      '6', '9', '4'\r\n    ],\r\n    [\r\n      '5', '4', '2',\r\n      '9', '1', '6',\r\n      '3', '7', '8'\r\n    ]\r\n]\r\n\r\n\r\nlet p2solution = [\r\n  [\r\n    '4', '9', '7',\r\n    '2', '5', '8',\r\n    '3', '1', '6'\r\n  ],\r\n  [\r\n    '1', '8', '6',\r\n    '4', '3', '9',\r\n    '7', '2', '5'\r\n  ],\r\n  [\r\n    '2', '5', '3',\r\n    '7', '1', '6',\r\n    '4', '9', '8'\r\n  ],\r\n  [\r\n    '6', '2', '9',\r\n    '3', '8', '1',\r\n    '5', '4', '7'\r\n  ],\r\n  [\r\n    '3', '7', '5',\r\n    '9', '6', '4',\r\n    '1', '8', '2'\r\n  ],\r\n  [\r\n    '8', '4', '1',\r\n    '5', '7', '2',\r\n    '6', '3', '9'\r\n  ],\r\n  [\r\n    '9', '6', '2',\r\n    '1', '4', '5',\r\n    '8', '7', '3'\r\n  ],\r\n  [\r\n    '7', '1', '8',\r\n    '6', '2', '3',\r\n    '9', '5', '4'\r\n  ],\r\n  [\r\n    '5', '3', '4',\r\n    '8', '9', '7',\r\n    '2', '6', '1'\r\n  ]\r\n]\r\n\r\nlet p3solution = [\r\n  [\r\n    '2', '8', '9',\r\n    '7', '6', '5',\r\n    '4', '3', '1'\r\n  ],\r\n  [\r\n    '3', '1', '7',\r\n    '9', '2', '4',\r\n    '8', '5', '6'\r\n  ],\r\n  [\r\n    '6', '4', '5',\r\n    '1', '3', '8',\r\n    '7', '2', '9'\r\n  ],\r\n  [\r\n    '7', '6', '3',\r\n    '8', '9', '1',\r\n    '5', '4', '2'\r\n  ],\r\n  [\r\n    '5', '2', '1',\r\n    '4', '7', '3',\r\n    '9', '6', '8'\r\n  ],\r\n  [\r\n    '8', '9', '4',\r\n    '6', '5', '2',\r\n    '1', '7', '3'\r\n  ],\r\n  [\r\n    '4', '3', '2',\r\n    '5', '1', '9',\r\n    '6', '8', '7'\r\n  ],\r\n  [\r\n    '9', '5', '6',\r\n    '3', '8', '7',\r\n    '2', '1', '4'\r\n  ],\r\n  [\r\n    '1', '7', '8',\r\n    '2', '4', '6',\r\n    '3', '9', '5'\r\n  ]\r\n]\r\n\r\nlet p4solution = [\r\n  [\r\n    '5', '6', '3',\r\n    '4', '7', '2',\r\n    '1', '9', '8'\r\n  ],\r\n  [\r\n    '2', '1', '9',\r\n    '3', '8', '6',\r\n    '7', '5', '4'\r\n  ],\r\n  [\r\n    '8', '4', '7',\r\n    '1', '9', '5',\r\n    '6', '2', '3'\r\n  ],\r\n  [\r\n    '4', '7', '2',\r\n    '6', '3', '8',\r\n    '5', '1', '9'\r\n  ],\r\n  [\r\n    '9', '5', '1',\r\n    '2', '4', '7',\r\n    '3', '8', '6'\r\n  ],\r\n  [\r\n    '6', '3', '8',\r\n    '5', '1', '9',\r\n    '4', '7', '2'\r\n  ],\r\n  [\r\n    '7', '9', '5',\r\n    '8', '6', '4',\r\n    '2', '3', '1'\r\n  ],\r\n  [\r\n    '3', '2', '4',\r\n    '9', '5', '1',\r\n    '8', '6', '7'\r\n  ],\r\n  [\r\n    '1', '8', '6',\r\n    '7', '2', '3',\r\n    '9', '4', '5'\r\n  ]\r\n]\r\nlet p5solution = [\r\n  [\r\n    '1', '6', '3',\r\n    '7', '2', '5',\r\n    '9', '4', '8'\r\n  ],\r\n  [\r\n    '5', '8', '4',\r\n    '6', '9', '3',\r\n    '2', '7', '1'\r\n  ],\r\n  [\r\n    '7', '2', '9',\r\n    '1', '8', '4',\r\n    '3', '6', '5'\r\n  ],\r\n  [\r\n    '9', '4', '6',\r\n    '3', '5', '8',\r\n    '1', '2', '7'\r\n  ],\r\n  [\r\n    '3', '7', '1',\r\n    '4', '6', '2',\r\n    '5', '8', '9'\r\n  ],\r\n  [\r\n    '8', '5', '2',\r\n    '9', '1', '7',\r\n    '6', '3', '4'\r\n  ],\r\n  [\r\n    '4', '9', '8',\r\n    '2', '3', '1',\r\n    '7', '5', '6'\r\n  ],\r\n  [\r\n    '6', '3', '7',\r\n    '5', '4', '9',\r\n    '8', '1', '2'\r\n  ],\r\n  [\r\n    '2', '1', '5',\r\n    '8', '7', '6',\r\n    '4', '9', '3'\r\n  ]\r\n]\r\nlet p6solution = [\r\n  [\r\n    '9', '7', '4',\r\n    '1', '8', '3',\r\n    '6', '5', '2'\r\n  ],\r\n  [\r\n    '6', '5', '1',\r\n    '2', '7', '4',\r\n    '3', '8', '9'\r\n  ],\r\n  [\r\n    '2', '8', '3',\r\n    '5', '9', '6',\r\n    '7', '1', '4'\r\n  ],\r\n  [\r\n    '1', '2', '9',\r\n    '8', '3', '5',\r\n    '4', '7', '6'\r\n  ],\r\n  [\r\n    '7', '4', '6',\r\n    '9', '1', '2',\r\n    '5', '3', '8'\r\n  ],\r\n  [\r\n    '8', '3', '5',\r\n    '6', '4', '7',\r\n    '9', '2', '1'\r\n  ],\r\n  [\r\n    '5', '6', '8',\r\n    '3', '2', '9',\r\n    '1', '4', '7'\r\n  ],\r\n  [\r\n    '3', '1', '7',\r\n    '4', '6', '8',\r\n    '2', '9', '5'\r\n  ],\r\n  [\r\n    '4', '9', '2',\r\n    '7', '5', '1',\r\n    '8', '6', '3'\r\n  ]\r\n]\r\nlet p7solution = [\r\n  [\r\n    '4', '3', '1',\r\n    '5', '6', '7',\r\n    '2', '8', '9'\r\n  ],\r\n  [\r\n    '7', '2', '9',\r\n    '4', '8', '1',\r\n    '6', '5', '3'\r\n  ],\r\n  [\r\n    '8', '6', '5',\r\n    '3', '2', '9',\r\n    '1', '7', '4'\r\n  ],\r\n  [\r\n    '9', '8', '6',\r\n    '2', '4', '3',\r\n    '5', '1', '7'\r\n  ],\r\n  [\r\n    '2', '5', '7',\r\n    '1', '9', '8',\r\n    '3', '4', '6'\r\n  ],\r\n  [\r\n    '1', '4', '3',\r\n    '7', '5', '6',\r\n    '8', '9', '2'\r\n  ],\r\n  [\r\n    '6', '1', '2',\r\n    '9', '7', '5',\r\n    '4', '3', '8'\r\n  ],\r\n  [\r\n    '3', '7', '4',\r\n    '8', '1', '2',\r\n    '9', '6', '5'\r\n  ],\r\n  [\r\n    '5', '9', '8',\r\n    '6', '3', '4',\r\n    '7', '2', '1'\r\n  ]\r\n]\r\nlet p8solution = [\r\n  [\r\n    '2', '5', '4',\r\n    '3', '6', '7',\r\n    '8', '9', '1'\r\n  ],\r\n  [\r\n    '8', '9', '3',\r\n    '2', '1', '5',\r\n    '6', '7', '4'\r\n  ],\r\n  [\r\n    '7', '1', '6',\r\n    '9', '8', '4',\r\n    '2', '5', '3'\r\n  ],\r\n  [\r\n    '5', '3', '2',\r\n    '6', '9', '8',\r\n    '1', '4', '7'\r\n  ],\r\n  [\r\n    '1', '7', '8',\r\n    '4', '3', '2',\r\n    '5', '6', '9'\r\n  ],\r\n  [\r\n    '6', '4', '9',\r\n    '5', '7', '1',\r\n    '3', '2', '8'\r\n  ],\r\n  [\r\n    '4', '2', '1',\r\n    '7', '5', '3',\r\n    '9', '8', '6'\r\n  ],\r\n  [\r\n    '3', '6', '5',\r\n    '8', '4', '9',\r\n    '7', '1', '2'\r\n  ],\r\n  [\r\n    '9', '8', '7',\r\n    '1', '2', '6',\r\n    '4', '3', '5'\r\n  ]\r\n]\r\nlet p9solution = [\r\n  [\r\n    '9', '5', '8',\r\n    '2', '7', '4',\r\n    '1', '6', '3'\r\n  ],\r\n  [\r\n    '1', '2', '3',\r\n    '6', '9', '8',\r\n    '7', '5', '4'\r\n  ],\r\n  [\r\n    '7', '4', '6',\r\n    '1', '5', '3',\r\n    '9', '2', '8'\r\n  ],\r\n  [\r\n    '6', '7', '4',\r\n    '3', '1', '5',\r\n    '2', '8', '9'\r\n  ],\r\n  [\r\n    '5', '3', '2',\r\n    '7', '8', '9',\r\n    '4', '1', '6'\r\n  ],\r\n  [\r\n    '8', '1', '9',\r\n    '4', '6', '2',\r\n    '3', '7', '5'\r\n  ],\r\n  [\r\n    '2', '8', '5',\r\n    '9', '4', '1',\r\n    '6', '3', '7'\r\n  ],\r\n  [\r\n    '3', '9', '7',\r\n    '5', '2', '6',\r\n    '8', '4', '1'\r\n  ],\r\n  [\r\n    '4', '6', '1',\r\n    '8', '3', '7',\r\n    '5', '9', '2'\r\n  ]\r\n]\r\nlet p10solution = [\r\n  [\r\n    '8', '6', '5',\r\n    '3', '7', '9',\r\n    '4', '1', '2'\r\n  ],\r\n  [\r\n    '9', '2', '4',\r\n    '5', '8', '1',\r\n    '3', '7', '6'\r\n  ],\r\n  [\r\n    '7', '1', '3',\r\n    '6', '4', '2',\r\n    '8', '9', '5'\r\n  ],\r\n  [\r\n    '3', '9', '7',\r\n    '1', '6', '4',\r\n    '5', '2', '8'\r\n  ],\r\n  [\r\n    '4', '8', '2',\r\n    '7', '9', '5',\r\n    '6', '3', '1'\r\n  ],\r\n  [\r\n    '1', '5', '6',\r\n    '8', '2', '3',\r\n    '9', '4', '7'\r\n  ],\r\n  [\r\n    '5', '4', '1',\r\n    '2', '3', '6',\r\n    '7', '8', '9'\r\n  ],\r\n  [\r\n    '6', '7', '9',\r\n    '4', '1', '8',\r\n    '2', '5', '3'\r\n  ],\r\n  [\r\n    '2', '3', '8',\r\n    '9', '5', '7',\r\n    '1', '6', '4'\r\n  ]\r\n]\r\n\r\nlet questionsArr = [p1question, p2question,  p3question, p4question, p5question, p6question,\r\np7question, p8question, p9question, p10question]\r\n\r\nlet solutionsArr = [p1solution, p2solution,  p3solution, p4solution, p5solution, p6solution,\r\np7solution, p8solution, p9solution, p10solution]\r\n\r\nexport {questionsArr, solutionsArr}","import React, { useState }  from 'react';\r\nimport './SudokuBoard.css';\r\nimport Square from '../Square/Square'\r\nimport orderedPairConverter from '../../HelperFunctions/orderedPairConverter'\r\nimport stringToNumberArr from '../../HelperFunctions/stringToNumberArr'\r\nimport {questionsArr, solutionsArr} from '../../Puzzles/PuzzlesList'\r\nimport {updateIncorrect, store, updateSolved} from '../../index'\r\n\r\n\r\n\r\nconst Board = (props) => {\r\n\r\n\r\n    let nullBoard = \r\n                    [   [null, null, null,    null, null, null,     null,  null,  null],\r\n                        [null, null, null,    null, null, null,     null,  null,  null],\r\n                        [null, null, null,    null, null, null,     null,  null,  null], \r\n\r\n                        [null, null, null,    null, null, null,     null,  null,  null],      //Representation of the board\r\n                        [null, null, null,    null, null, null,     null,  null,  null],      //Starts out as null so that board can be updated\r\n                        [null, null, null,    null, null, null,     null,  null,  null],      //By State to compare to finished result\r\n\r\n                        [null, null, null,    null, null, null,     null,  null,  null], \r\n                        [null, null, null,    null, null, null,     null,  null,  null], \r\n                        [null, null, null,    null, null, null,     null,  null,  null], \r\n    ];\r\n    \r\n    let emptyBoard = \r\n                    [   [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"],\r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"],\r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"], \r\n\r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"],      //Representation of the board\r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"],      //Starts out as \"\" so that board can be updated\r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"],      //By State to compare to finished result\r\n\r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"], \r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"], \r\n                        [\"\", \"\", \"\",    \"\", \"\", \"\",     \"\",  \"\",  \"\"], \r\n    ];\r\n    \r\n    let solvedBoardRedux = \r\n                    [   [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"],\r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"],\r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"], \r\n\r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"],      //Representation of the board\r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"],      //Starts out as \"\" so that board can be updated\r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"],      //By State to compare to finished result\r\n\r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"], \r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"], \r\n                        [\"solved\", \"solved\", \"solved\",    \"solved\", \"solved\", \"solved\",     \"solved\",  \"solved\",  \"solved\"], \r\n    ];\r\n\r\n    const [board, setBoardState] = useState(nullBoard); // STATE HOOK Setting load state to empty board\r\n    const [incorrectBoard, setIncorrect] = useState(emptyBoard); // STATE HOOK Copy board for dBoard css classes\r\n    const [solvedState, setSolved] = useState(false); // STATE HOOK To check if solved\r\n\r\n    const getNewGame = (randomNumber) => {\r\n        let initialPosition = questionsArr[randomNumber]\r\n        let solution = solutionsArr[randomNumber]\r\n        return [stringToNumberArr(initialPosition), stringToNumberArr(solution)]\r\n    }\r\n\r\n    const submitHandler = () => {\r\n        let counter = 0;\r\n        \r\n        for (let i = 0; i<board.length;i++) {\r\n            for (let j =0 ; j<board[i].length; j++) {\r\n                if (board[i][j] !== solvedPosition[i][j] && board[i][j] !== null) {\r\n                    incorrectBoard[i][j] = \"incorrect\"\r\n                    setIncorrect(incorrectBoard)\r\n                    store.dispatch(updateIncorrect(incorrectBoard))\r\n                    counter++\r\n                } else if (board[i][j] !== solvedPosition[i][j]) {\r\n                    counter++\r\n                }\r\n            }\r\n        }\r\n        if (counter === 0) {\r\n            solved();\r\n        }\r\n    }\r\n\r\n    const checkSolved = () => {\r\n        if (solvedState) {\r\n            return <div className=\"success\">SUCCESS!</div>\r\n        }\r\n    }\r\n\r\n    const solved = () => {\r\n        store.dispatch(updateSolved(solvedBoardRedux));    \r\n        setSolved(true)    \r\n    }\r\n    \r\n    const updateBoardInitalState = (number, location) => {\r\n        let [row, column] = orderedPairConverter(location);\r\n        board[row][column] = number;\r\n        setBoardState(board);\r\n    }\r\n\r\n    const updateSquareInputState = (e, location) => {\r\n        let [i, j] = orderedPairConverter(location)  \r\n        if (e.target.value == \"\") {\r\n            setSolved(false)\r\n            board[i][j] = null;\r\n            setBoardState(board)\r\n            incorrectBoard[i][j] = null;\r\n            setIncorrect(incorrectBoard)\r\n            store.dispatch(updateIncorrect(incorrectBoard))\r\n        } else {\r\n            board[i][j] = +e.target.value;\r\n            setBoardState(board)\r\n            incorrectBoard[i][j] = null;\r\n            setIncorrect(incorrectBoard)\r\n            store.dispatch(updateIncorrect(incorrectBoard))\r\n        }\r\n        \r\n    };\r\n  \r\n    let restart = () => {\r\n        setBoardState(nullBoard)\r\n        setIncorrect(emptyBoard)\r\n        props.restart()\r\n    }\r\n\r\n    let [initialPosition, solvedPosition] = getNewGame(props.arrIndex)\r\n\r\n    return (\r\n        <div className=\"page-container\">\r\n            {checkSolved()}\r\n                <ul className=\"button-container\">\r\n                    <button className=\"btn\" id=\"btn-1\" onClick= {submitHandler}>Submit</button>\r\n                    <button className=\"btn\" id=\"btn-2\" onClick= {restart}>New Game</button>\r\n                </ul>\r\n          \r\n            <div className=\"board-container\">            \r\n                \r\n                <div className=\"square-container\">\r\n                \r\n                    {/* SQUARES BY ROWS */}\r\n                \r\n                                            {/* Row1 */}\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a1\" edge=\"left top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b1\" edge=\"top\" />\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c1\" edge=\"top right margin-fix-left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d1\" edge=\"top left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e1\" edge=\"top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f1\" edge=\"top right margin-fix-left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g1\" edge=\"top left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h1\" edge=\"top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i1\" edge=\"top right margin-fix-left\"/>\r\n                \r\n                                            {/* Row2 */}\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a2\" edge=\"left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b2\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c2\" edge=\"right margin-fix-left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d2\" edge=\"left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e2\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f2\" edge=\"right margin-fix-left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g2\" edge=\"left\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h2\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState}  initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i2\" edge=\"right margin-fix-left\"/>\r\n                \r\n                                            {/* Row3 */}\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a3\" edge=\"left bottom margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b3\" edge=\"bottom margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c3\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d3\" edge=\"bottom left margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e3\" edge=\"bottom margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f3\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g3\" edge=\"bottom left margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h3\" edge=\"bottom margin-fix-top\"/>\r\n                <Square updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i3\" edge=\"right bottom margin-fix-left margin-fix-top\"/>\r\n            \r\n                                            {/* Row4 */}\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a4\" edge=\"left top \"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b4\" edge=\"top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c4\" edge=\"top right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d4\" edge=\"top left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e4\" edge=\"top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f4\" edge=\"top right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g4\" edge=\"top left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h4\" edge=\"top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i4\" edge=\"right top margin-fix-left\"/>\r\n            \r\n                                            {/* Row5 */}\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a5\" edge=\"left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b5\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c5\" edge=\"right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d5\" edge=\"left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e5\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f5\" edge=\"right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g5\" edge=\"left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h5\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i5\" edge=\"right margin-fix-left\"/>\r\n            \r\n                                            {/* Row6 */}\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a6\" edge=\"left bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b6\" edge=\"bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c6\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d6\" edge=\"bottom left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e6\" edge=\"bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f6\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g6\" edge=\"bottom left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h6\" edge=\"bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i6\" edge=\"right bottom margin-fix-left margin-fix-top\"/>\r\n                \r\n                                            {/* Row7 */}\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a7\" edge=\"left top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b7\" edge=\"top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c7\" edge=\"top right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d7\" edge=\"left top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e7\" edge=\"top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f7\" edge=\"right top margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g7\" edge=\"left top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h7\" edge=\"top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i7\" edge=\"right top margin-fix-left\"/>\r\n                \r\n                                            {/* Row8 */}\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a8\" edge=\"left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b8\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c8\" edge=\"right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d8\" edge=\"left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e8\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f8\" edge=\"right margin-fix-left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g8\" edge=\"left\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h8\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i8\" edge=\"right margin-fix-left\"/>\r\n                                            {/* Row9 */}\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"a9\" edge=\"left bottom margin-fix-top\"                             />\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"b9\" edge=\"bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"c9\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"d9\" edge=\"bottom left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"e9\" edge=\"bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"f9\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"g9\" edge=\"bottom left margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"h9\" edge=\"bottom margin-fix-top\"/>\r\n                <Square  updateBoardInitalState={updateBoardInitalState} initialPosition = {initialPosition} updateSquareInputState={updateSquareInputState} location=\"i9\" edge=\"bottom right margin-fix-left margin-fix-top\"/>\r\n                \r\n            \r\n                </div>\r\n \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;","import React, {useState} from 'react';\nimport './App.css';\nimport SudokuBoard from \"./Components/SudokuBoard/SudokuBoard\"\nimport {store, updateIncorrect} from './index'\n\n\nfunction App() {  \n  let nullBoard = \n  [   [null, null, null,    null, null, null,     null,  null,  null],\n      [null, null, null,    null, null, null,     null,  null,  null],\n      [null, null, null,    null, null, null,     null,  null,  null], \n\n      [null, null, null,    null, null, null,     null,  null,  null],      //Representation of the board\n      [null, null, null,    null, null, null,     null,  null,  null],      //Starts out as null so that board can be updated\n      [null, null, null,    null, null, null,     null,  null,  null],      //By State to compare to finished result\n\n      [null, null, null,    null, null, null,     null,  null,  null], \n      [null, null, null,    null, null, null,     null,  null,  null], \n      [null, null, null,    null, null, null,     null,  null,  null], \n];\n\n  let createNewBoard = () => {\n    return <SudokuBoard arrIndex={randomNumberGenerator()} restart={makeNewGame}/>\n}\n\n\n  let randomNumberGenerator = () => { \n    let randomNumber = Math.floor(Math.random() * 9);\n    return randomNumber\n  }\n  let makeNewGame = () => {\n    store.dispatch(updateIncorrect(nullBoard))\n     \n    setNewGame(createNewBoard())\n  }\n\n  let [newGame, setNewGame] = useState(createNewBoard())\n  \n\n  return (\n    <div className=\"Layout\">\n    \n      {newGame}\n              \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider} from 'react-redux'\nimport  {createStore} from 'redux';\n\n\n// REDUX \nlet nullBoard = \n                    [   [null, null, null,    null, null, null,     null,  null,  null],\n                        [null, null, null,    null, null, null,     null,  null,  null],\n                        [null, null, null,    null, null, null,     null,  null,  null], \n\n                        [null, null, null,    null, null, null,     null,  null,  null],      //Representation of the board\n                        [null, null, null,    null, null, null,     null,  null,  null],      //Starts out as null so that board can be updated\n                        [null, null, null,    null, null, null,     null,  null,  null],      //By State to compare to finished result\n\n                        [null, null, null,    null, null, null,     null,  null,  null], \n                        [null, null, null,    null, null, null,     null,  null,  null], \n                        [null, null, null,    null, null, null,     null,  null,  null], \n    ];\n\n//REDUCER\nfunction boardReducer(board = nullBoard, action) {\n  switch (action.type) {\n    case 'INCORRECT':\n      //This is assigning a whole new updated board, supplied from the state by the hook setIncorrect in Component <SudokuBoard>\n    return Object.assign({}, board, {\n      board: action.board\n    })\n\n    case \"SOLVED\":\n      return Object.assign({}, board, {\n        board: action.board\n      })\n\n    default:\n      return board\n  }\n}\n\nfunction updateIncorrect(board) {\n  return {\n    type: \"INCORRECT\",\n    board: board\n  }\n}\n\nfunction updateSolved(board) {\n  return {\n    type: \"SOLVED\",\n    board: board\n  }\n}\n\n//STORE\nconst store = createStore(boardReducer)\n\n\nReactDOM.render(\n  \n  <Provider store={store}>\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport {updateIncorrect, store, updateSolved};\n"],"sourceRoot":""}